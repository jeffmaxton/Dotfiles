# variables
is_osx='uname | grep -q Darwin'

# HACK: grepping pane_current_command is broken if we start vim with shell script,
# but grepping window title might be problematic, works for now though...
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# is_vim='echo "#T" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# set default shell
set -g default-shell /bin/zsh

# copy and paste using osx clipboard
if-shell "$is_osx" "set -g default-command 'reattach-to-user-namespace -l zsh'"
if-shell "$is_osx" "bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'"
if-shell "$is_osx" "bind-key -t vi-copy MouseDragEnd1Pane copy-pipe 'reattach-to-user-namespace pbcopy'"

# look good
set -g default-terminal "screen-256color"

# visual bell
set -g bell-action any
set -g visual-bell on
setw -g monitor-activity on

# mouse
set -g mouse on
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane scroll-up
bind-key -t vi-copy WheelDownPane scroll-down

# stay in copy mode when selecting stuff!
unbind-key -t vi-copy MouseDragEnd1Pane
bind-key -t vi-copy MouseUp1Pane cancel

# for those times when C-c and q are not enough.
bind-key -t vi-copy Escape cancel

# history
set -g history-limit 10000

# window titles
set -g set-titles on
set -g set-titles-string "#T"
setw -g automatic-rename on

# better resizing
setw -g aggressive-resize on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 0
set -sg repeat-time 500

# message display time
set -g display-time 1000

# send events to vim
set -g focus-events on

# start indexing with 1
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# screen like bindings
unbind C-b
set -g prefix C-a
bind a send-prefix

# vim-like splits
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# choose sessions and windows with upper case letters
unbind w
bind S run "tmux choose-tree -u"
bind F run "tmux split-window -l 20 ftpane"

# vim pane movements
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# disable arrows for pane switching
unbind up
unbind down
unbind left
unbind right

# pane resizing
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r = resize-pane -D 1
bind -r + resize-pane -U 1

# window switching
unbind n
unbind p
unbind ]
bind ] next-window
bind [ previous-window

# session switching
bind { switch-client -n
bind } switch-client -p

# vim-like copy mode enter and paste
bind Escape copy-mode -e
bind P      paste-buffer

# vim-like bindings in copy mode
setw -g mode-keys vi
bind -t vi-copy v begin-selection
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy Escape cancel

# easier pane killing
bind K kill-pane

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# reload config
unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded!"

# small panes on sides - 10 height / 80 width
bind H run "tmux split-window -h -c '#{pane_current_path}'; tmux swap-pane -U; tmux resize-pane -x 80"
bind J split-window -l 10 -c "#{pane_current_path}"
bind K run "tmux split-window -c '#{pane_current_path}'; tmux swap-pane -U; tmux resize-pane -y 10"
bind L split-window -h -l 80 -c "#{pane_current_path}"

# status bar
setw -g status on
set -g status-interval 10
set -g window-status-separator ""
set -g status-justify "centre"
set -g status-left-length  40
set -g status-right-length 40

# status bar window
setw -g window-status-current-format " #T#{?window_bell_flag, !,} "
setw -g window-status-format         " #T#{?window_bell_flag, !,} "

# pane border colors
set -g pane-border-fg 0
set -g pane-border-bg default
set -g pane-active-border-fg 0
set -g pane-active-border-bg default

# other colors
setw -g clock-mode-colour 0
set -g display-panes-active-colour colour012
set -g display-panes-colour 0

# solarized
# set -g status-left  "#[bg=colour012, fg=white] #(tmux display-message -p '#S' | tr '[:lower:]' '[:upper:]') #[bg=default]"
# set -g status-right "#[bg=colour011, fg=white] #(tmux-stats) #[bg=colour012, fg=white] #(date +%H:%M) "
# setw -g window-status-style          "bg=default,   fg=colour010"
# setw -g window-status-current-style  "bg=colour011, fg=white"
# setw -g window-status-activity-style "bg=default,   fg=white"
# setw -g window-status-bell-style     "bg=default,   fg=white"
# setw -g window-status-content-style  "bg=default,   fg=white"
# set -g message-bg black
# set -g message-fg colour010

# jellybeans
# set -g status-left  "#[bg=colour025, fg=colour195] #(tmux display-message -p '#S' | tr '[:lower:]' '[:upper:]') "
# set -g status-right "#[bg=colour236, fg=colour145] #(tmux-stats) #[bg=colour025, fg=colour195] #(date +%H:%M) "
# setw -g window-status-style          "bg=default,   fg=colour145"
# setw -g window-status-current-style  "bg=colour025, fg=colour254"
# setw -g window-status-activity-style "bg=default,   fg=colour195"
# setw -g window-status-bell-style     "bg=default,   fg=colour195"
# setw -g window-status-content-style  "bg=default,   fg=colour195"
# set -g message-bg black
# set -g message-fg colour015
# set -g status-bg colour234
# set -g status-fg colour195

# hybrid
# set -g status-left  "#[bg=colour110, fg=black] #(tmux display-message -p '#S' | tr '[:lower:]' '[:upper:]') "
set -g status-left  "#[bg=colour110, fg=black] #(tmux display-message -p '#S' | tr '[:lower:]' '[:upper:]') "
set -g status-right "#[bg=colour237, fg=colour015] #(tmux-stats) #[bg=colour110, fg=black] #(date +%H:%M) "

setw -g window-status-style          "bg=colour237, fg=colour015"
setw -g window-status-current-style  "bg=colour110, fg=black"
setw -g window-status-activity-style "bg=colour237, fg=colour015"
setw -g window-status-bell-style     "bg=colour237, fg=colour015"
# setw -g window-status-content-style  "bg=colour237, fg=colour015"
set -g message-bg colour235
set -g message-fg colour110
set -g status-bg colour235
set -g status-fg colour014

setw -g mode-fg white
setw -g mode-bg black
